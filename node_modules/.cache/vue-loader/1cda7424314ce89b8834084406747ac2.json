{"remainingRequest":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/src/components/ResultsScreen/ResultsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/src/components/ResultsScreen/ResultsTable.vue","mtime":1568545481000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport meosResultsApi from '@/meos-results-api'\nimport FlashCell from '@/components/ResultsScreen/FlashCell.vue'\n\nexport default {\n\n\tdata() {\n\t\treturn {\n\t\t\tnow: new Date(),\n\t\t\tpageNum: parseInt(this.$route.params.page) || 0,\n\t\t\tresultsResponse: null,\n\n\t\t\twindowWidth: 0,\n\t\t\twindowHeight: 0,\n\t\t\trowHeight: 30,\n\t\t\theaderRowHeight: 80,\n\t\t\tcolumnGap: 20,\n\t\t\tpageSidePadding: 10,\n\t\t\tpageTopPadding: 0,\n\t\t\tpageBottomPadding: 60,\n\n\t\t\t// Store the zoom level of the browser window\n\t\t\tzoomChrome: 1,\n\n\t\t\t// Column widths\n\t\t\tcolOverallRank: 50,\n\t\t\tcolCompetitor: 180,\n\t\t\tcolClub: 50,\n\t\t\tcolElapsedTime: 65,\n\t\t\tcolElapsedDiff: 55,\n\t\t\tcolRadioTime: 65,\n\t\t\tcolRadioRank: 30,\n\t\t\tcolRadioDiff: 47,\n\n\t\t\tstatusToRank: {\n\t\t\t\t3: 'MP',\n\t\t\t\t4: 'DNF',\n\t\t\t\t5: 'DQ',\n\t\t\t\t6: 'OT',\n\t\t\t\t20: 'DNS',\n\t\t\t\t21: 'CNL',\n\t\t\t\t99: 'NP',\n\t\t\t}\n\t\t}\n\t},\n\n\tcomputed: {\n\t\t// Splits the data into \"pages\" such that all of the data within each page\n\t\t// will fit as efficiently as possible onto the page\n\t\tpages() {\n\t\t\tconst {\n\t\t\t\tresultsResponse,\n\t\t\t\twindowHeight,\n\t\t\t\trowHeight,\n\t\t\t\theaderRowHeight,\n\t\t\t\tcolumnGap,\n\t\t\t\tcolOverallRank,\n\t\t\t\tcolCompetitor,\n\t\t\t\tcolClub,\n\t\t\t\tcolElapsedTime,\n\t\t\t\tcolElapsedDiff,\n\t\t\t\tcolRadioTime,\n\t\t\t\tcolRadioRank,\n\t\t\t\tcolRadioDiff,\n\t\t\t} = this\n\t\t\t\n\t\t\tconst windowWidth = this.windowWidth - this.pageSidePadding * 2\n\n\t\t\tif (!resultsResponse) {\n\t\t\t\treturn []\n\t\t\t}\n\n\t\t\tconst pages = []\n\t\t\tlet page = null\n\t\t\tlet column = null\n\t\t\tlet results = null\n\t\t\tlet lastCls = null\n\t\t\tlet cls = null\n\t\t\tlet tableWidth = 0\n\t\t\tlet columnWidth = 0\n\t\t\tlet columnHeight = 0\n\t\t\tlet overallWidth = 0\n\n\t\t\tconst tableBaseWidth = colOverallRank + colCompetitor + colClub + colElapsedTime + colElapsedDiff\n\t\t\tconst tableRadioWidth = colRadioTime + colRadioRank + colRadioDiff\n\n\t\t\tconst save = () => {\n\t\t\t\t// This is all the data we need in order to restore the state\n\t\t\t\treturn {\n\t\t\t\t\tpagesLength: pages.length,\n\t\t\t\t\tpageLength: page && page.length,\n\t\t\t\t\tcolumnLength: column && column.classes.length,\n\t\t\t\t\tlastCls,\n\t\t\t\t\ttableWidth,\n\t\t\t\t\tcolumnWidth,\n\t\t\t\t\tcolumnHeight,\n\t\t\t\t\toverallWidth,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst rollback = state => {\n\t\t\t\t({\n\t\t\t\t\tlastCls,\n\t\t\t\t\ttableWidth,\n\t\t\t\t\tcolumnWidth,\n\t\t\t\t\tcolumnHeight,\n\t\t\t\t\toverallWidth,\n\t\t\t\t} = state)\n\n\t\t\t\tpages.splice(state.pagesLength)\n\t\t\t\tpage = pages[pages.length - 1]\n\n\t\t\t\tif (page) {\n\t\t\t\t\tpage.splice(state.pageLength)\n\t\t\t\t\tcolumn = page[page.length - 1]\n\n\t\t\t\t\tif (column) {\n\t\t\t\t\t\tcolumn.classes.splice(state.columnLength)\n\t\t\t\t\t\tresults = column.classes[column.classes.length - 1]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst fit = height => {\n\t\t\t\tconst additionalWidth = Math.max(0, tableWidth - columnWidth)\n\t\t\t\tconst overflowH = overallWidth + additionalWidth > windowWidth\n\t\t\t\tconst overflowV = columnHeight + height + this.pageTopPadding + this.pageBottomPadding > windowHeight\n\n\t\t\t\t// Do we need another page?\n\t\t\t\tif (!page || (overflowH && page.length > 1)) {\n\t\t\t\t\tpage = []\n\t\t\t\t\tpages.push(page)\n\t\t\t\t\tcolumn = null\n\t\t\t\t\tresults = null\n\t\t\t\t\tcolumnWidth = 0\n\t\t\t\t\tcolumnHeight = 0\n\t\t\t\t\toverallWidth = 0\n\t\t\t\t\tfit(height)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// Do we need another column?\n\t\t\t\tif (!column || overflowV) {\n\t\t\t\t\tcolumn = {\n\t\t\t\t\t\tmaxRadioCount: 0,\n\t\t\t\t\t\tclasses: [],\n\t\t\t\t\t}\n\t\t\t\t\tpage.push(column)\n\t\t\t\t\tresults = null\n\t\t\t\t\tcolumnWidth = tableWidth\n\t\t\t\t\tcolumnHeight = 0\n\t\t\t\t\toverallWidth += tableWidth + (page.length === 1 ? 0 : columnGap)\n\t\t\t\t\tfit(height)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// Do we need another results section?\n\t\t\t\tif (!results) {\n\t\t\t\t\tresults = []\n\t\t\t\t\tcolumn.maxRadioCount = Math.max(column.maxRadioCount, cls.radioCount)\n\t\t\t\t\tcolumn.classes.push({\n\t\t\t\t\t\tcls,\n\t\t\t\t\t\tresults,\n\t\t\t\t\t\tcontinued: lastCls === cls,\n\t\t\t\t\t})\n\t\t\t\t\tlastCls = cls\n\t\t\t\t\tcolumnHeight += headerRowHeight\n\t\t\t\t\tfit(height)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tcolumnWidth += additionalWidth\n\t\t\t\tcolumnHeight += height\n\t\t\t}\n\n\t\t\tfor (cls of resultsResponse.cmpResults) {\n\t\t\t\ttableWidth = tableBaseWidth + tableRadioWidth * cls.radioCount\n\t\t\t\tresults = null\n\t\t\t\t\n\t\t\t\t// Save the current state in case we need to rollback\n\t\t\t\tconst state = save()\n\n\t\t\t\t// Are we at the start of a page?\n\t\t\t\tconst atStartOfPage = !page || !page.length || !page[0].classes.length\n\t\t\t\tconst pagesLengthBefore = pages.length\n\n\t\t\t\t// Fit the class\n\t\t\t\tfor (const result of cls.clsResults) {\n\t\t\t\t\tfit(rowHeight)\n\t\t\t\t\tresults.push(result)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Was the class split across multiple pages?\n\t\t\t\tconst classSpansMultiplePages = pages.length > pagesLengthBefore\n\n\t\t\t\tif (classSpansMultiplePages && !atStartOfPage) {\n\t\t\t\t\t// Rollback\n\t\t\t\t\trollback(state)\n\n\t\t\t\t\t// Fit the class on a new page\n\t\t\t\t\tpage = null\n\t\t\t\t\tcolumn = null\n\t\t\t\t\tresults = null\n\t\t\t\t\t\n\t\t\t\t\tfor (const result of cls.clsResults) {\n\t\t\t\t\t\tfit(rowHeight)\n\t\t\t\t\t\tresults.push(result)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Trim away empty columns/sections/etc\n\t\t\tfor (let i = pages.length - 1; i >= 0; i--) {\n\t\t\t\tconst page = pages[i]\n\n\t\t\t\tfor (let j = page.length - 1; j >= 0; j--) {\n\t\t\t\t\tconst column = page[j]\n\n\t\t\t\t\tfor (let k = column.classes.length - 1; k >= 0; k--) {\n\t\t\t\t\t\tconst section = column.classes[k]\n\n\t\t\t\t\t\tif (!section.results.length) {\n\t\t\t\t\t\t\tcolumn.classes.splice(k, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!column.classes.length) {\n\t\t\t\t\t\tpage.splice(j, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!page.length) {\n\t\t\t\t\tpages.splice(i, 1)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn pages\n\t\t},\n\t},\n\n\tfilters: {\n\t\tformatAbsoluteTime: function(t) {\n\t\t\t\n\t\t\tif (t) {\n\n\t\t\t\t// This code does hh:mm:ss for > 1 hour and mm:ss for < 1 hour\n\n\t\t\t\t/*\n\t\t\t\tvar h, m, s;\n\n\t\t\t\tif (t > 3600) {\n\t\t\t\t\th = Math.floor(t/3600).toString();\n\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\treturn `${h}:${m}:${s}`;\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif (t >= 600 ) {\n\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(1, '0');\n\t\t\t\t\t}\n\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\treturn `${m}:${s}`;\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\t// This code does mmm:ss for everyone\n\t\t\t\tvar m, s;\n\n\t\t\t\tm = Math.floor(t/60).toString();\n\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\treturn `${m}:${s}`;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tformatStartTime: function(t) {\n\n\t\t\tvar h, m, s;\n\n\t\t\tif (t > 3600) {\n\t\t\t\th = Math.floor(t/3600).toString();\n\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\treturn `${h}:${m}:${s}`;\n\t\t\t}\n\n\t\t},\n\n\t},\n\n\tcreated () {\n\t\twindow.addEventListener('resize', () => this.updateWindowSize())\n\t\tthis.updateWindowSize()\n\t\tthis.refreshResults()\n\n\t\tsetInterval(() => this.now = new Date(), 1000)\n\n\t\tconst updateLoop = () => {\n\t\t\tconst nowMs = +new Date()\n\t\t\tconst updateIntervalMs = 5000;\n\t\t\tconst delay = Math.floor(nowMs / 1000) * 1000 - nowMs + updateIntervalMs\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.refreshResults()\n\t\t\t\tupdateLoop()\n\n\t\t\t}, delay)\n\t\t}\n\n\t\tupdateLoop()\n\t},\n\n\tcomponents: {\n\t\tFlashCell\n\t},\n\n\tmethods: {\n\n\t\tupdateWindowSize() {\n\t\t\tthis.windowWidth = window.innerWidth\n\t\t\tthis.windowHeight = window.innerHeight\n\n\t\t\t// Update the browser window zoom level\n\t\t\tthis.zoomChrome = Math.round(((window.outerWidth) / window.innerWidth) * 100) / 100;\n\t\t\t// console.log(this.zoomChrome);\n\n\t\t\tthis.columnGap = 20 * this.zoomChrome\n\t\t\tthis.colOverallRank = 50 * this.zoomChrome\n\t\t\tthis.colCompetitor = 180 * this.zoomChrome\n\t\t\tthis.colClub = 50 * this.zoomChrome\n\t\t\tthis.colElapsedTime = 65 * this.zoomChrome\n\t\t\tthis.colElapsedDiff = 55 * this.zoomChrome\n\t\t\tthis.colRadioTime = 65 * this.zoomChrome\n\t\t\tthis.colRadioRank = 30 * this.zoomChrome\n\t\t\tthis.colRadioDiff = 47 * this.zoomChrome\n\n\t\t},\n\n\t\tasync refreshResults () {\n\t\t\tthis.resultsResponse = await meosResultsApi.getResultsScreen()\n\t\t},\n\n\t\t// Calculates the current elapsed time for a competitor, based on their startTime\n\t\tcalculateElapsedTime(startTime) {\n\n\t\t\t// Time of day in 10ths of seconds\n\t\t\tconst { now } = this;\n\t\t\tconst currentTimeSecs = (now.getSeconds() + (60 * now.getMinutes()) + (60 * 60 * now.getHours())) * 10;\n\n\t\t\t// Calculate elapsed running time\n\t\t\tconst elapsedRunningTime = currentTimeSecs - startTime;\n\n\t\t\t// Check that it's positive\n\t\t\tif (elapsedRunningTime >= 0) {\n\n\t\t\t\t// Return the result\n\t\t\t\treturn elapsedRunningTime;\n\n\t\t\t}\n\n\t\t\t// Otherwise, return null\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Returns whether a competitor has started yet or not\n\t\tcompetitorStarted(startTime) {\n\n\t\t\t// Number of seconds since midnight\n\t\t\tconst { now } = this;\n\t\t\tconst currentTimeSecs = (now.getSeconds() + (60 * now.getMinutes()) + (60 * 60 * now.getHours())) * 10;\n\n\t\t\t// Calculate elapsed running time\n\t\t\tconst elapsedRunningTime = currentTimeSecs - startTime;\n\n\t\t\t// Check that it's positive\n\t\t\tif (elapsedRunningTime > 0) {\n\n\t\t\t\t// Return true\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// Otherwise, return false\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// Determines when the status is 0 whether the competitor is started or not yet started, and returns the relevant icon\n\t\tstatusZero(resultObject) {\n\n\t\t\t// Calculate their elapsed time\n\t\t\tvar elapsedRunningTime = this.calculateElapsedTime(resultObject.startTime);\n\n\t\t\t// They have not started\n\t\t\tif (elapsedRunningTime == null) {\n\n\t\t\t\t// Set the icon to three dots (pending...)\n\t\t\t\treturn 'pending';\n\n\t\t\t}\n\n\t\t\t// They have started...\n\t\t\telse {\n\n\t\t\t\t// Set the icon to a running man\n\t\t\t\treturn 'running';\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Displays the distance info (if available) for a particular radio\n\t\tformatDistance(d) {\n\n\t\t\t// Convert the distance in meters into km for display, rounded to 1dp\n\t\t\tvar distanceInKm = parseFloat(d / 1000).toFixed(1);\n\n\t\t\t// Return the distance\n\t\t\treturn distanceInKm;\n\n\t\t},\n\n\t\t// Returns a colour for a given string, based upon the string's hash\n\t\tclassColor(str) {\n\n\t\t\tvar hash = 0;\n\n\t\t\tif (str.length === 0) return hash;\n\n\t\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash);\n\t\t\t\thash = hash & hash;\n\t\t\t}\n\n\t\t\tconst h = Math.abs(hash) % 360;\n\t\t\tconst s = Math.abs(hash) % 100;\n\t\t\tconst l = (Math.abs(hash) % 25) + 20;\n\n\t\t\treturn `hsl(${h}, ${s}%, ${l}%)`;\n\n\t\t},\n\n\t}\n\n}\n\n",{"version":3,"sources":["ResultsTable.vue"],"names":[],"mappingsgffile":"ResultsTable.vue","sourceRoot":"src/components/ResultsScreen","sourcesContent":["<template>\n\n\t<div v-if=\"pages[pageNum]\" \n\tclass=\"columns resultsScreen\"\n\t:style=\"{ paddingLeft: pageSidePadding + 'px', paddingRight: pageSidePadding + 'px', paddingTop: pageTopPadding + 'px', paddingBottom: pageBottomPadding + 'px' }\"\n\t>\n\n\t\t<table\n\t\t\tv-for=\"(column, columnI) of pages[pageNum]\"\n\t\t\t:key=\"columnI\"\n\t\t\tclass=\"column\"\n\t\t\t:style=\"{ marginLeft: (columnI === 0 ? 0 : columnGap) + 'px' }\"\n\t\t>\n\n\t\t\t<template\n\t\t\t\tv-for=\"(results, resultsI) of column.classes\"\n\t\t\t>\n\n\t\t\t\t<tr\n\t\t\t\t\t:key=\"`${resultsI}-header`\"\n\t\t\t\t\tclass=\"headingRow\"\n\t\t\t\t\t:style=\"{ height: headerRowHeight + 'px' }\"\n\t\t\t\t>\n\t\t\t\t\t<th class=\"className\" colspan=\"3\"><span class=\"pillIcon\" :style=\"{ backgroundColor: classColor(results.cls.clsName) }\">{{ results.cls.clsName }} <span class=\"contText\">{{ results.continued ? '(Cont...)' : '' }}</span><div class=\"classMetadata\"><span class=\"classLength\">{{ results.cls.length != null ? formatDistance(results.cls.length) + ' km' : '' }}</span> &#8226; <span class=\"classCourse\">{{ results.cls.course }}</span></div></span></th>\n\t\t\t\t\t<th class=\"elapsedHeading\" colspan=\"2\">Total</th>\n\t\t\t\t\t<th class=\"splitHeading\" colspan=\"3\" v-for=\"(n, i) in results.cls.radioCount\" :key=\"n\">Split {{ n }} - {{ results.cls.radioInfo[i].distance != null ? formatDistance(results.cls.radioInfo[i].distance) + ' km' : '' }}</th>\n\t\t\t\t\t<th\n\t\t\t\t\t\tv-if=\"results.cls.radioCount < column.maxRadioCount\"\n\t\t\t\t\t\t:colspan=\"(column.maxRadioCount - results.cls.radioCount) * 3\"\n\t\t\t\t\t/>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr\n\t\t\t\t\tv-for=\"result of results.results\"\n\t\t\t\t\t:key=\"`${resultsI}-result-${result.id}`\"\n\t\t\t\t\t:style=\"{ height: rowHeight + 'px' }\"\n\t\t\t\t\tv-bind:class=\"{ 'proceedToDownload':(result.status == 100) }\"\n\t\t\t\t>\n\n\t\t\t\t\t<td class=\"col-overallRank\" :style=\"{ width: colOverallRank + 'px' }\">\n\t\t\t\t\t\t<font-awesome-icon v-if=\"result.startTime > 0 && result.status == 0 && statusZero(result) == 'running'\" icon=\"running\" class=\"pillIcon running\" />\n\t\t\t\t\t\t<font-awesome-icon v-else-if=\"(result.status == 0 && statusZero(result) == 'pending') || (result.startTime <= 0 && result.status == 0)\" icon=\"ellipsis-h\" />\n\t\t\t\t\t\t<template v-else-if=\"result.status == 1\"><span class=\"pillIcon finisher\">{{ result.finishRank }}</span></template>\n\t\t\t\t\t\t<template v-else-if=\"result.status == 100\"><span class=\"pillIcon finisher\">{{ result.finishRank }}</span></template>\n\t\t\t\t\t\t<template v-else><span class=\"pillIcon nonfinisher\">{{ statusToRank[result.status] }}</span></template>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<td class=\"col-competitor\" :style=\"{ width: colCompetitor + 'px' }\">{{ result.competitor }}</td>\n\t\t\t\t\t<td class=\"col-club\" :style=\"{ width: colClub + 'px' }\">{{ result.club }}</td>\n\n\t\t\t\t\t<td class=\"col-elapsedTime\" :style=\"{ width: colElapsedTime + 'px' }\">\n\t\t\t\t\t\t<template v-if=\"result.startTime > 0 && competitorStarted(result.startTime) == false\"><span class=\"startTimeDisplay\">{{ (result.startTime / 10) | formatStartTime }}</span></template>\n\t\t\t\t\t\t<template v-else-if=\"result.startTime > 0 && result.finishTime == null && result.status == 0\">{{ (calculateElapsedTime(result.startTime) / 10) | formatAbsoluteTime }}</template>\n\t\t\t\t\t\t<template v-else>{{ result.finishTime }}</template>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<td class=\"col-elapsedDiff\" :style=\"{ width: colElapsedDiff + 'px' }\">\n\t\t\t\t\t\t<template v-if=\"competitorStarted(result.startTime) == false\"><span class=\"startTimeDisplay\">Start</span></template>\n\t\t\t\t\t\t<template v-else>{{ result.finishDiff }}</template>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<!-- we need to use i (index) rather than n (value) so we start at zero-->\n\t\t\t\t\t<template v-for=\"(n, i) in results.cls.radioCount\">\n\n\t\t\t\t\t\t<flash-cell :display-value=\"result.radios[i].time\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-time'\" class=\"col-radioTime\" :style=\"{ width: colRadioTime + 'px' }\"></flash-cell>\n\n\t\t\t\t\t\t<!-- if no radio punch then print no brackets-->\n\t\t\t\t\t\t<flash-cell v-if=\"result.radios[i].time == null\" :display-value=\"null\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-rank'\" class=\"col-radioRank\" :style=\"{ width: colRadioRank + 'px' }\"></flash-cell>\n\t\t\t\t\t\t<flash-cell v-else :display-value=\"'(' + result.radios[i].rank + ')'\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-rank'\" class=\"col-radioRank\" :style=\"{ width: colRadioRank + 'px' }\"></flash-cell>\n\n\t\t\t\t\t\t<flash-cell :display-value=\"result.radios[i].diff\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-diff'\" class=\"col-radioDiff\" :style=\"{ width: colRadioDiff + 'px' }\"></flash-cell>\n\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<td\n\t\t\t\t\t\tv-if=\"results.cls.radioCount < column.maxRadioCount\"\n\t\t\t\t\t\t:colspan=\"(column.maxRadioCount - results.cls.radioCount) * 3\"\n\t\t\t\t\t/>\n\n\t\t\t\t</tr>\n\n\t\t\t</template>\n\n\t\t</table>\n\n\t\t<div id=\"marquee\" v-bind:class=\"{ 'marqueeHidden': resultsResponse.marquee.show == 0, 'marqueeShow': resultsResponse.marquee.show != 0 }\">\n\t\t\t<marquee-text :repeat=\"10\" :duration=\"parseInt(resultsResponse.marquee.duration)\">{{ resultsResponse.marquee.text }}</marquee-text>\n\t\t</div>\n\n\t</div>\n\n</template>\n\n<style scoped>\n\n/* roboto-100 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 100;\n  src: local('Roboto Thin'), local('Roboto-Thin'),\n       url('/fonts/roboto-v20-latin-100.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-100.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-100italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 100;\n  src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n       url('/fonts/roboto-v20-latin-100italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-100italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-300 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Roboto Light'), local('Roboto-Light'),\n       url('/fonts/roboto-v20-latin-300.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-300.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-300italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 300;\n  src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n       url('/fonts/roboto-v20-latin-300italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-300italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-regular - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Roboto'), local('Roboto-Regular'),\n       url('/fonts/roboto-v20-latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Roboto Italic'), local('Roboto-Italic'),\n       url('/fonts/roboto-v20-latin-italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-500 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  src: local('Roboto Medium'), local('Roboto-Medium'),\n       url('/fonts/roboto-v20-latin-500.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-500.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-500italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 500;\n  src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n       url('/fonts/roboto-v20-latin-500italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-500italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-700 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Roboto Bold'), local('Roboto-Bold'),\n       url('/fonts/roboto-v20-latin-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-700italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 700;\n  src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n       url('/fonts/roboto-v20-latin-700italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-700italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-900 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 900;\n  src: local('Roboto Black'), local('Roboto-Black'),\n       url('/fonts/roboto-v20-latin-900.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-900.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-900italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 900;\n  src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n       url('/fonts/roboto-v20-latin-900italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-900italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n\ndiv.resultsScreen {\n\tbackground-color: #333;\n\tcolor: #eee;\n\tfont-family: Roboto;\n\tmargin: 0;\n}\n\ntable {\n\tborder-collapse: collapse;\n\twhite-space: nowrap;\n\ttable-layout: fixed;\n\toverflow: hidden;\n}\n\ntable tr td {\n\t/*border: 1px solid #777;*/\n\tvertical-align: bottom;\n}\n\ntd, th {\n\tpadding: 0 3px;\n\tbox-sizing: border-box;\n\tposition: relative;\n}\n\nth {\n\tborder-bottom: 1px solid #777;\n\tvertical-align: bottom;\n\tpadding-bottom: 10px;\n}\n\n@keyframes proceedToDownload {\n\t0% { \n\t\topacity: 0.1;\n\t}\n\n\t15% {\n\t\topacity: 1;\n\t}\n\n\t25% {\n\t\topacity: 1;\n\t}\n\n\t40% {\n\t\topacity: 0.1;\n\t}\n\n\t100% {\n\t\topacity: 0.1;\n\t}\n\n}\n\ntr.proceedToDownload td:first-child:after {\n\tposition: absolute;\n\tz-index: 1;\n\tdisplay: block;\n\ttext-align: left;\n\tleft: 0;\n\ttop: 0;\n\twidth: 1000px;\n\theight: 24px;\n\tpadding-top: 5px;\n\tmargin-left: -50px;\n\tcontent:\"UNOFFICIAL • PROCEED TO DOWNLOAD • UNOFFICIAL • PROCEED TO DOWNLOAD • UNOFFICIAL • PROCEED TO DOWNLOAD\";\n\tfont-size: 17px;\n\tbackground: repeating-linear-gradient(\n\t\t45deg,\n\t\t#EF9F01,\n\t\t#EF9F01 10px,\n\t\t#FEBB34 10px,\n\t\t#FEBB34 20px\n\t);\n\tcolor: white;\n\topacity: 0.1;\n\tanimation-duration: 30000ms;\n\tanimation-name: proceedToDownload;\n\tanimation-iteration-count: infinite;\n}\n\n\ntr:nth-child(even){\n\tbackground-color: #444;\n}\n\ntr:nth-child(odd){\n\tbackground-color: #333;\n}\n\nth.className {\n\ttext-align: left;\n\tfont-size: 24px;\n\ttext-transform: uppercase;\n\tpadding-top: 10px;\n\tpadding-left: 10px;\n\tfont-weight: 500;\n}\n\ntr.headingRow th.className span.pillIcon {\n\tborder-radius: 5px;\n\tdisplay: inline-block;\n\tpadding: 4px 16px 3px 16px;\n\twidth: 225px;\n}\n\nth.className .classMetadata {\n\tmargin-top: 5px;\n\tfont-size: 14px;\n\tfont-weight: 300;\n}\n\nth.className .classLength {\n\tmargin-right: 5px;\n}\n\nth.className .classCourse {\n\tmargin-left: 5px;\n}\n\nth.className .contText {\n\tfont-size: 16px;\n}\n\nth.elapsedHeading {\n\tfont-size: 14px;\n\ttext-align: center;\n}\n\nth.splitHeading {\n\tfont-size: 14px;\n\ttext-align: center;\n}\n\ntd {\n\tborder-bottom: 1px solid #777;\n}\n\ntd.col-overallRank {\n\ttext-align: center;\n\tfont-size: 13px;\n\tvertical-align: middle;\n}\n\ntd.col-overallRank .pillIcon {\n\tborder: none;\n\tpadding: 2px 5px;\n\tcolor: white;\n\ttext-align: center;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tmargin: 4px 2px;\n\tborder-radius: 18px;\n}\n\ntd.col-overallRank .pillIcon.finisher {\n\tbackground-color: #32a852;\n}\n\ntd.col-overallRank .pillIcon.running {\n\tpadding: 2px 7px;\n\tbackground-color: #d18400;\n}\n\ntr.proceedToDownload td.col-overallRank .pillIcon {\n\tbackground-color: #d18400;\n}\n\ntd.col-overallRank .pillIcon.nonfinisher {\n\tbackground-color: #8c1414;\n}\n\ntd.col-competitor {\n\tmax-width: 180px;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tvertical-align: middle;\n\tfont-weight: 500;\n}\n\ntd.col-club {\n\tvertical-align: middle;\n}\n\ntd.col-elapsedTime {\n\ttext-align: right;\n\tvertical-align: middle;\n}\n\ntd.col-elapsedTime .startTimeDisplay {\n\tcolor: #d18400;\n\tfont-weight: 300;\n}\n\ntd.col-elapsedDiff {\n\ttext-align: left;\n\tfont-size: 12px;\n\tvertical-align: middle;\n\tpadding-top: 2px;\n}\n\ntd.col-elapsedDiff .startTimeDisplay {\n\tcolor: #d18400;\n\tfont-weight: 300;\n}\n\ntd.col-radioTime {\n\ttext-align: right;\n\tvertical-align: middle;\n}\n\ntd.col-radioRank {\n\tfont-size: 12px;\n\tvertical-align: middle;\n\tpadding-top: 2px;\n}\n\ntd.col-radioDiff {\n\ttext-align: left;\n\tfont-size: 12px;\n\tvertical-align: middle;\n\tpadding-top: 2px;\n}\n\n.columns {\n\tdisplay: flex;\n}\n\n.column {\n\tflex: 0 0 auto;\n}\n\n#marquee {\n\tbackground-color: black;\n\theight: 46px;\n\twidth: 100%;\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tpadding-top: 8px;\n\ttext-transform: uppercase;\n\tfont-size: 32px;\n}\n\n#marquee .marquee-text-text {\n\tpadding-right: 150px;\n\twhite-space: pre-wrap;\n}\n\n@keyframes hideMarquee {\n\t0% { \n\t\tbottom: 0;\n\t}\n\n\t100% {\n\t\tbottom: -54px;\n\t}\n\n}\n\n#marquee.marqueeHidden {\n\t/*display: none;*/\n\tanimation-duration: 1000ms;\n\tanimation-name: hideMarquee;\n\tanimation-iteration-count: 1;\n\tbottom: -54px;\n}\n\n@keyframes showMarquee {\n\t0% { \n\t\tbottom: -54px;\n\t}\n\n\t100% {\n\t\tbottom: 0px;\n\t}\n\n}\n\n#marquee.marqueeShow {\n\t/*display: none;*/\n\tanimation-duration: 1000ms;\n\tanimation-name: showMarquee;\n\tanimation-iteration-count: 1;\n\tbottom: 0px;\n}\n\n</style>\n\n<script>\n\n\timport meosResultsApi from '@/meos-results-api'\n\timport FlashCell from '@/components/ResultsScreen/FlashCell.vue'\n\n\texport default {\n\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tnow: new Date(),\n\t\t\t\tpageNum: parseInt(this.$route.params.page) || 0,\n\t\t\t\tresultsResponse: null,\n\n\t\t\t\twindowWidth: 0,\n\t\t\t\twindowHeight: 0,\n\t\t\t\trowHeight: 30,\n\t\t\t\theaderRowHeight: 80,\n\t\t\t\tcolumnGap: 20,\n\t\t\t\tpageSidePadding: 10,\n\t\t\t\tpageTopPadding: 0,\n\t\t\t\tpageBottomPadding: 60,\n\n\t\t\t\t// Store the zoom level of the browser window\n\t\t\t\tzoomChrome: 1,\n\n\t\t\t\t// Column widths\n\t\t\t\tcolOverallRank: 50,\n\t\t\t\tcolCompetitor: 180,\n\t\t\t\tcolClub: 50,\n\t\t\t\tcolElapsedTime: 65,\n\t\t\t\tcolElapsedDiff: 55,\n\t\t\t\tcolRadioTime: 65,\n\t\t\t\tcolRadioRank: 30,\n\t\t\t\tcolRadioDiff: 47,\n\n\t\t\t\tstatusToRank: {\n\t\t\t\t\t3: 'MP',\n\t\t\t\t\t4: 'DNF',\n\t\t\t\t\t5: 'DQ',\n\t\t\t\t\t6: 'OT',\n\t\t\t\t\t20: 'DNS',\n\t\t\t\t\t21: 'CNL',\n\t\t\t\t\t99: 'NP',\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcomputed: {\n\t\t\t// Splits the data into \"pages\" such that all of the data within each page\n\t\t\t// will fit as efficiently as possible onto the page\n\t\t\tpages() {\n\t\t\t\tconst {\n\t\t\t\t\tresultsResponse,\n\t\t\t\t\twindowHeight,\n\t\t\t\t\trowHeight,\n\t\t\t\t\theaderRowHeight,\n\t\t\t\t\tcolumnGap,\n\t\t\t\t\tcolOverallRank,\n\t\t\t\t\tcolCompetitor,\n\t\t\t\t\tcolClub,\n\t\t\t\t\tcolElapsedTime,\n\t\t\t\t\tcolElapsedDiff,\n\t\t\t\t\tcolRadioTime,\n\t\t\t\t\tcolRadioRank,\n\t\t\t\t\tcolRadioDiff,\n\t\t\t\t} = this\n\t\t\t\t\n\t\t\t\tconst windowWidth = this.windowWidth - this.pageSidePadding * 2\n\n\t\t\t\tif (!resultsResponse) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\tconst pages = []\n\t\t\t\tlet page = null\n\t\t\t\tlet column = null\n\t\t\t\tlet results = null\n\t\t\t\tlet lastCls = null\n\t\t\t\tlet cls = null\n\t\t\t\tlet tableWidth = 0\n\t\t\t\tlet columnWidth = 0\n\t\t\t\tlet columnHeight = 0\n\t\t\t\tlet overallWidth = 0\n\n\t\t\t\tconst tableBaseWidth = colOverallRank + colCompetitor + colClub + colElapsedTime + colElapsedDiff\n\t\t\t\tconst tableRadioWidth = colRadioTime + colRadioRank + colRadioDiff\n\n\t\t\t\tconst save = () => {\n\t\t\t\t\t// This is all the data we need in order to restore the state\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpagesLength: pages.length,\n\t\t\t\t\t\tpageLength: page && page.length,\n\t\t\t\t\t\tcolumnLength: column && column.classes.length,\n\t\t\t\t\t\tlastCls,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tcolumnWidth,\n\t\t\t\t\t\tcolumnHeight,\n\t\t\t\t\t\toverallWidth,\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst rollback = state => {\n\t\t\t\t\t({\n\t\t\t\t\t\tlastCls,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tcolumnWidth,\n\t\t\t\t\t\tcolumnHeight,\n\t\t\t\t\t\toverallWidth,\n\t\t\t\t\t} = state)\n\n\t\t\t\t\tpages.splice(state.pagesLength)\n\t\t\t\t\tpage = pages[pages.length - 1]\n\n\t\t\t\t\tif (page) {\n\t\t\t\t\t\tpage.splice(state.pageLength)\n\t\t\t\t\t\tcolumn = page[page.length - 1]\n\n\t\t\t\t\t\tif (column) {\n\t\t\t\t\t\t\tcolumn.classes.splice(state.columnLength)\n\t\t\t\t\t\t\tresults = column.classes[column.classes.length - 1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst fit = height => {\n\t\t\t\t\tconst additionalWidth = Math.max(0, tableWidth - columnWidth)\n\t\t\t\t\tconst overflowH = overallWidth + additionalWidth > windowWidth\n\t\t\t\t\tconst overflowV = columnHeight + height + this.pageTopPadding + this.pageBottomPadding > windowHeight\n\n\t\t\t\t\t// Do we need another page?\n\t\t\t\t\tif (!page || (overflowH && page.length > 1)) {\n\t\t\t\t\t\tpage = []\n\t\t\t\t\t\tpages.push(page)\n\t\t\t\t\t\tcolumn = null\n\t\t\t\t\t\tresults = null\n\t\t\t\t\t\tcolumnWidth = 0\n\t\t\t\t\t\tcolumnHeight = 0\n\t\t\t\t\t\toverallWidth = 0\n\t\t\t\t\t\tfit(height)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do we need another column?\n\t\t\t\t\tif (!column || overflowV) {\n\t\t\t\t\t\tcolumn = {\n\t\t\t\t\t\t\tmaxRadioCount: 0,\n\t\t\t\t\t\t\tclasses: [],\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpage.push(column)\n\t\t\t\t\t\tresults = null\n\t\t\t\t\t\tcolumnWidth = tableWidth\n\t\t\t\t\t\tcolumnHeight = 0\n\t\t\t\t\t\toverallWidth += tableWidth + (page.length === 1 ? 0 : columnGap)\n\t\t\t\t\t\tfit(height)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do we need another results section?\n\t\t\t\t\tif (!results) {\n\t\t\t\t\t\tresults = []\n\t\t\t\t\t\tcolumn.maxRadioCount = Math.max(column.maxRadioCount, cls.radioCount)\n\t\t\t\t\t\tcolumn.classes.push({\n\t\t\t\t\t\t\tcls,\n\t\t\t\t\t\t\tresults,\n\t\t\t\t\t\t\tcontinued: lastCls === cls,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tlastCls = cls\n\t\t\t\t\t\tcolumnHeight += headerRowHeight\n\t\t\t\t\t\tfit(height)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnWidth += additionalWidth\n\t\t\t\t\tcolumnHeight += height\n\t\t\t\t}\n\n\t\t\t\tfor (cls of resultsResponse.cmpResults) {\n\t\t\t\t\ttableWidth = tableBaseWidth + tableRadioWidth * cls.radioCount\n\t\t\t\t\tresults = null\n\t\t\t\t\t\n\t\t\t\t\t// Save the current state in case we need to rollback\n\t\t\t\t\tconst state = save()\n\n\t\t\t\t\t// Are we at the start of a page?\n\t\t\t\t\tconst atStartOfPage = !page || !page.length || !page[0].classes.length\n\t\t\t\t\tconst pagesLengthBefore = pages.length\n\n\t\t\t\t\t// Fit the class\n\t\t\t\t\tfor (const result of cls.clsResults) {\n\t\t\t\t\t\tfit(rowHeight)\n\t\t\t\t\t\tresults.push(result)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Was the class split across multiple pages?\n\t\t\t\t\tconst classSpansMultiplePages = pages.length > pagesLengthBefore\n\n\t\t\t\t\tif (classSpansMultiplePages && !atStartOfPage) {\n\t\t\t\t\t\t// Rollback\n\t\t\t\t\t\trollback(state)\n\n\t\t\t\t\t\t// Fit the class on a new page\n\t\t\t\t\t\tpage = null\n\t\t\t\t\t\tcolumn = null\n\t\t\t\t\t\tresults = null\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (const result of cls.clsResults) {\n\t\t\t\t\t\t\tfit(rowHeight)\n\t\t\t\t\t\t\tresults.push(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Trim away empty columns/sections/etc\n\t\t\t\tfor (let i = pages.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst page = pages[i]\n\n\t\t\t\t\tfor (let j = page.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tconst column = page[j]\n\n\t\t\t\t\t\tfor (let k = column.classes.length - 1; k >= 0; k--) {\n\t\t\t\t\t\t\tconst section = column.classes[k]\n\n\t\t\t\t\t\t\tif (!section.results.length) {\n\t\t\t\t\t\t\t\tcolumn.classes.splice(k, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!column.classes.length) {\n\t\t\t\t\t\t\tpage.splice(j, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!page.length) {\n\t\t\t\t\t\tpages.splice(i, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn pages\n\t\t\t},\n\t\t},\n\n\t\tfilters: {\n\t\t\tformatAbsoluteTime: function(t) {\n\t\t\t\t\n\t\t\t\tif (t) {\n\n\t\t\t\t\t// This code does hh:mm:ss for > 1 hour and mm:ss for < 1 hour\n\n\t\t\t\t\t/*\n\t\t\t\t\tvar h, m, s;\n\n\t\t\t\t\tif (t > 3600) {\n\t\t\t\t\t\th = Math.floor(t/3600).toString();\n\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\t\treturn `${h}:${m}:${s}`;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (t >= 600 ) {\n\t\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(1, '0');\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\t\treturn `${m}:${s}`;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\n\t\t\t\t\t// This code does mmm:ss for everyone\n\t\t\t\t\tvar m, s;\n\n\t\t\t\t\tm = Math.floor(t/60).toString();\n\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\treturn `${m}:${s}`;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\tformatStartTime: function(t) {\n\n\t\t\t\tvar h, m, s;\n\n\t\t\t\tif (t > 3600) {\n\t\t\t\t\th = Math.floor(t/3600).toString();\n\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\treturn `${h}:${m}:${s}`;\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t},\n\n\t\tcreated () {\n\t\t\twindow.addEventListener('resize', () => this.updateWindowSize())\n\t\t\tthis.updateWindowSize()\n\t\t\tthis.refreshResults()\n\n\t\t\tsetInterval(() => this.now = new Date(), 1000)\n\n\t\t\tconst updateLoop = () => {\n\t\t\t\tconst nowMs = +new Date()\n\t\t\t\tconst updateIntervalMs = 5000;\n\t\t\t\tconst delay = Math.floor(nowMs / 1000) * 1000 - nowMs + updateIntervalMs\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.refreshResults()\n\t\t\t\t\tupdateLoop()\n\n\t\t\t\t}, delay)\n\t\t\t}\n\n\t\t\tupdateLoop()\n\t\t},\n\n\t\tcomponents: {\n\t\t\tFlashCell\n\t\t},\n\n\t\tmethods: {\n\n\t\t\tupdateWindowSize() {\n\t\t\t\tthis.windowWidth = window.innerWidth\n\t\t\t\tthis.windowHeight = window.innerHeight\n\n\t\t\t\t// Update the browser window zoom level\n\t\t\t\tthis.zoomChrome = Math.round(((window.outerWidth) / window.innerWidth) * 100) / 100;\n\t\t\t\t// console.log(this.zoomChrome);\n\n\t\t\t\tthis.columnGap = 20 * this.zoomChrome\n\t\t\t\tthis.colOverallRank = 50 * this.zoomChrome\n\t\t\t\tthis.colCompetitor = 180 * this.zoomChrome\n\t\t\t\tthis.colClub = 50 * this.zoomChrome\n\t\t\t\tthis.colElapsedTime = 65 * this.zoomChrome\n\t\t\t\tthis.colElapsedDiff = 55 * this.zoomChrome\n\t\t\t\tthis.colRadioTime = 65 * this.zoomChrome\n\t\t\t\tthis.colRadioRank = 30 * this.zoomChrome\n\t\t\t\tthis.colRadioDiff = 47 * this.zoomChrome\n\n\t\t\t},\n\n\t\t\tasync refreshResults () {\n\t\t\t\tthis.resultsResponse = await meosResultsApi.getResultsScreen()\n\t\t\t},\n\n\t\t\t// Calculates the current elapsed time for a competitor, based on their startTime\n\t\t\tcalculateElapsedTime(startTime) {\n\n\t\t\t\t// Time of day in 10ths of seconds\n\t\t\t\tconst { now } = this;\n\t\t\t\tconst currentTimeSecs = (now.getSeconds() + (60 * now.getMinutes()) + (60 * 60 * now.getHours())) * 10;\n\n\t\t\t\t// Calculate elapsed running time\n\t\t\t\tconst elapsedRunningTime = currentTimeSecs - startTime;\n\n\t\t\t\t// Check that it's positive\n\t\t\t\tif (elapsedRunningTime >= 0) {\n\n\t\t\t\t\t// Return the result\n\t\t\t\t\treturn elapsedRunningTime;\n\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, return null\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\t// Returns whether a competitor has started yet or not\n\t\t\tcompetitorStarted(startTime) {\n\n\t\t\t\t// Number of seconds since midnight\n\t\t\t\tconst { now } = this;\n\t\t\t\tconst currentTimeSecs = (now.getSeconds() + (60 * now.getMinutes()) + (60 * 60 * now.getHours())) * 10;\n\n\t\t\t\t// Calculate elapsed running time\n\t\t\t\tconst elapsedRunningTime = currentTimeSecs - startTime;\n\n\t\t\t\t// Check that it's positive\n\t\t\t\tif (elapsedRunningTime > 0) {\n\n\t\t\t\t\t// Return true\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, return false\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t// Determines when the status is 0 whether the competitor is started or not yet started, and returns the relevant icon\n\t\t\tstatusZero(resultObject) {\n\n\t\t\t\t// Calculate their elapsed time\n\t\t\t\tvar elapsedRunningTime = this.calculateElapsedTime(resultObject.startTime);\n\n\t\t\t\t// They have not started\n\t\t\t\tif (elapsedRunningTime == null) {\n\n\t\t\t\t\t// Set the icon to three dots (pending...)\n\t\t\t\t\treturn 'pending';\n\n\t\t\t\t}\n\n\t\t\t\t// They have started...\n\t\t\t\telse {\n\n\t\t\t\t\t// Set the icon to a running man\n\t\t\t\t\treturn 'running';\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t// Displays the distance info (if available) for a particular radio\n\t\t\tformatDistance(d) {\n\n\t\t\t\t// Convert the distance in meters into km for display, rounded to 1dp\n\t\t\t\tvar distanceInKm = parseFloat(d / 1000).toFixed(1);\n\n\t\t\t\t// Return the distance\n\t\t\t\treturn distanceInKm;\n\n\t\t\t},\n\n\t\t\t// Returns a colour for a given string, based upon the string's hash\n\t\t\tclassColor(str) {\n\n\t\t\t\tvar hash = 0;\n\n\t\t\t\tif (str.length === 0) return hash;\n\n\t\t\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash);\n\t\t\t\t\thash = hash & hash;\n\t\t\t\t}\n\n\t\t\t\tconst h = Math.abs(hash) % 360;\n\t\t\t\tconst s = Math.abs(hash) % 100;\n\t\t\t\tconst l = (Math.abs(hash) % 25) + 20;\n\n\t\t\t\treturn `hsl(${h}, ${s}%, ${l}%)`;\n\n\t\t\t},\n\n\t\t}\n\n\t}\n\n</script>\n"]}]}
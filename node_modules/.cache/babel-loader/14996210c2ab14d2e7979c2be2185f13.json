{"remainingRequest":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/node_modules/babel-loader/lib/index.js!/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/node_modules/eslint-loader/index.js??ref--13-0!/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/src/meos-results-api.js","dependencies":[{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/src/meos-results-api.js","mtime":1568545481000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar client = axios.create({\n  baseURL: process.env.VUE_APP_BASE_MEOS_MOP_URL,\n  json: true\n});\nexport default {\n  execute: function () {\n    var _execute = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(method, resource, data) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", client({\n                method: method,\n                url: resource,\n                data: data,\n                headers: {}\n              }).then(function (req) {\n                return req.data;\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function execute(_x, _x2, _x3) {\n      return _execute.apply(this, arguments);\n    }\n\n    return execute;\n  }(),\n  getResultsScreen: function getResultsScreen() {\n    return this.execute('get', '/results-api.php');\n  },\n  getSplitResults: function getSplitResults(competitorId, radioId) {\n    return this.execute('get', \"/split-control-api.php?competitorId=\".concat(competitorId, \"&radioId=\").concat(radioId));\n  },\n  getOverallStandings: function getOverallStandings() {\n    return this.execute('get', \"/standings-api.php\");\n  },\n  getLatestPunches: function getLatestPunches() {\n    return this.execute('get', \"/latest-punches-api.php\");\n  },\n  getLatestPunchesForRadio: function getLatestPunchesForRadio(radioId) {\n    return this.execute('get', \"/latest-punches-api.php?radioId=\".concat(radioId));\n  }\n};",{"version":3,"sources":["/Users/sithum/Documents/GitHub/Oceania-Online-Results-Site-/src/meos-results-api.js"],"names":["axios","client","create","baseURL","process","env","VUE_APP_BASE_MEOS_MOP_URL","json","execute","method","resource","data","url","headers","then","req","getResultsScreen","getSplitResults","competitorId","radioId","getOverallStandings","getLatestPunches","getLatestPunchesForRadio"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAc;AAC5BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBADO;AAE5BC,EAAAA,IAAI,EAAE;AAFsB,CAAd,CAAf;AAKA,eAAe;AACPC,EAAAA,OADO;AAAA;AAAA;AAAA,6CACEC,MADF,EACUC,QADV,EACoBC,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEJV,MAAM,CAAC;AACZQ,gBAAAA,MAAM,EAANA,MADY;AAEZG,gBAAAA,GAAG,EAAEF,QAFO;AAGZC,gBAAAA,IAAI,EAAJA,IAHY;AAIZE,gBAAAA,OAAO,EAAE;AAJG,eAAD,CAAN,CAKJC,IALI,CAKC,UAAAC,GAAG,EAAI;AACb,uBAAOA,GAAG,CAACJ,IAAX;AACD,eAPM,CAFI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWbK,EAAAA,gBAXa,8BAWO;AAClB,WAAO,KAAKR,OAAL,CAAa,KAAb,EAAoB,kBAApB,CAAP;AACD,GAbY;AAcbS,EAAAA,eAda,2BAcIC,YAdJ,EAckBC,OAdlB,EAc2B;AACtC,WAAO,KAAKX,OAAL,CAAa,KAAb,gDAA2DU,YAA3D,sBAAmFC,OAAnF,EAAP;AACD,GAhBY;AAiBbC,EAAAA,mBAjBa,iCAiBU;AACrB,WAAO,KAAKZ,OAAL,CAAa,KAAb,uBAAP;AACD,GAnBY;AAoBba,EAAAA,gBApBa,8BAoBO;AAClB,WAAO,KAAKb,OAAL,CAAa,KAAb,4BAAP;AACD,GAtBY;AAuBbc,EAAAA,wBAvBa,oCAuBaH,OAvBb,EAuBsB;AACjC,WAAO,KAAKX,OAAL,CAAa,KAAb,4CAAuDW,OAAvD,EAAP;AACD;AAzBY,CAAf","sourcesContent":["import axios from 'axios'\n\nconst client = axios.create( {\n\tbaseURL: process.env.VUE_APP_BASE_MEOS_MOP_URL,\n\tjson: true\n})\n\nexport default {\n  async execute (method, resource, data) {\n    return client({\n      method,\n      url: resource,\n      data,\n      headers: {}\n    }).then(req => {\n      return req.data\n    })\n  },\n  getResultsScreen () {\n    return this.execute('get', '/results-api.php')\n  },\n  getSplitResults (competitorId, radioId) {\n    return this.execute('get', `/split-control-api.php?competitorId=${competitorId}&radioId=${radioId}`)\n  },\n  getOverallStandings () {\n    return this.execute('get', `/standings-api.php`)\n  },\n  getLatestPunches () {\n    return this.execute('get', `/latest-punches-api.php`)\n  },\n  getLatestPunchesForRadio (radioId) {\n    return this.execute('get', `/latest-punches-api.php?radioId=${radioId}`)\n  },\n}"]}]}
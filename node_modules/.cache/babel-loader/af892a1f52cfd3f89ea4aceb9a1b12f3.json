{"remainingRequest":"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/babel-loader/lib/index.js!/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/src/components/ResultsScreen/ResultsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/src/components/ResultsScreen/ResultsTable.vue","mtime":1568545481000},{"path":"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/sithum/Downloads/meos-results-screens-master/meos-results-screens/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport meosResultsApi from '@/meos-results-api';\nimport FlashCell from '@/components/ResultsScreen/FlashCell.vue';\nexport default {\n  data: function data() {\n    return {\n      now: new Date(),\n      pageNum: parseInt(this.$route.params.page) || 0,\n      resultsResponse: null,\n      windowWidth: 0,\n      windowHeight: 0,\n      rowHeight: 30,\n      headerRowHeight: 80,\n      columnGap: 20,\n      pageSidePadding: 10,\n      pageTopPadding: 0,\n      pageBottomPadding: 60,\n      // Store the zoom level of the browser window\n      zoomChrome: 1,\n      // Column widths\n      colOverallRank: 50,\n      colCompetitor: 180,\n      colClub: 50,\n      colElapsedTime: 65,\n      colElapsedDiff: 55,\n      colRadioTime: 65,\n      colRadioRank: 30,\n      colRadioDiff: 47,\n      statusToRank: {\n        3: 'MP',\n        4: 'DNF',\n        5: 'DQ',\n        6: 'OT',\n        20: 'DNS',\n        21: 'CNL',\n        99: 'NP'\n      }\n    };\n  },\n  computed: {\n    // Splits the data into \"pages\" such that all of the data within each page\n    // will fit as efficiently as possible onto the page\n    pages: function pages() {\n      var _this = this;\n\n      var resultsResponse = this.resultsResponse,\n          windowHeight = this.windowHeight,\n          rowHeight = this.rowHeight,\n          headerRowHeight = this.headerRowHeight,\n          columnGap = this.columnGap,\n          colOverallRank = this.colOverallRank,\n          colCompetitor = this.colCompetitor,\n          colClub = this.colClub,\n          colElapsedTime = this.colElapsedTime,\n          colElapsedDiff = this.colElapsedDiff,\n          colRadioTime = this.colRadioTime,\n          colRadioRank = this.colRadioRank,\n          colRadioDiff = this.colRadioDiff;\n      var windowWidth = this.windowWidth - this.pageSidePadding * 2;\n\n      if (!resultsResponse) {\n        return [];\n      }\n\n      var pages = [];\n      var page = null;\n      var column = null;\n      var results = null;\n      var lastCls = null;\n      var cls = null;\n      var tableWidth = 0;\n      var columnWidth = 0;\n      var columnHeight = 0;\n      var overallWidth = 0;\n      var tableBaseWidth = colOverallRank + colCompetitor + colClub + colElapsedTime + colElapsedDiff;\n      var tableRadioWidth = colRadioTime + colRadioRank + colRadioDiff;\n\n      var save = function save() {\n        // This is all the data we need in order to restore the state\n        return {\n          pagesLength: pages.length,\n          pageLength: page && page.length,\n          columnLength: column && column.classes.length,\n          lastCls: lastCls,\n          tableWidth: tableWidth,\n          columnWidth: columnWidth,\n          columnHeight: columnHeight,\n          overallWidth: overallWidth\n        };\n      };\n\n      var rollback = function rollback(state) {\n        lastCls = state.lastCls;\n        tableWidth = state.tableWidth;\n        columnWidth = state.columnWidth;\n        columnHeight = state.columnHeight;\n        overallWidth = state.overallWidth;\n        pages.splice(state.pagesLength);\n        page = pages[pages.length - 1];\n\n        if (page) {\n          page.splice(state.pageLength);\n          column = page[page.length - 1];\n\n          if (column) {\n            column.classes.splice(state.columnLength);\n            results = column.classes[column.classes.length - 1];\n          }\n        }\n      };\n\n      var fit = function fit(height) {\n        var additionalWidth = Math.max(0, tableWidth - columnWidth);\n        var overflowH = overallWidth + additionalWidth > windowWidth;\n        var overflowV = columnHeight + height + _this.pageTopPadding + _this.pageBottomPadding > windowHeight; // Do we need another page?\n\n        if (!page || overflowH && page.length > 1) {\n          page = [];\n          pages.push(page);\n          column = null;\n          results = null;\n          columnWidth = 0;\n          columnHeight = 0;\n          overallWidth = 0;\n          fit(height);\n          return;\n        } // Do we need another column?\n\n\n        if (!column || overflowV) {\n          column = {\n            maxRadioCount: 0,\n            classes: []\n          };\n          page.push(column);\n          results = null;\n          columnWidth = tableWidth;\n          columnHeight = 0;\n          overallWidth += tableWidth + (page.length === 1 ? 0 : columnGap);\n          fit(height);\n          return;\n        } // Do we need another results section?\n\n\n        if (!results) {\n          results = [];\n          column.maxRadioCount = Math.max(column.maxRadioCount, cls.radioCount);\n          column.classes.push({\n            cls: cls,\n            results: results,\n            continued: lastCls === cls\n          });\n          lastCls = cls;\n          columnHeight += headerRowHeight;\n          fit(height);\n          return;\n        }\n\n        columnWidth += additionalWidth;\n        columnHeight += height;\n      };\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = resultsResponse.cmpResults[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          cls = _step.value;\n          tableWidth = tableBaseWidth + tableRadioWidth * cls.radioCount;\n          results = null; // Save the current state in case we need to rollback\n\n          var state = save(); // Are we at the start of a page?\n\n          var atStartOfPage = !page || !page.length || !page[0].classes.length;\n          var pagesLengthBefore = pages.length; // Fit the class\n\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = cls.clsResults[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _result = _step2.value;\n              fit(rowHeight);\n              results.push(_result);\n            } // Was the class split across multiple pages?\n\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          var classSpansMultiplePages = pages.length > pagesLengthBefore;\n\n          if (classSpansMultiplePages && !atStartOfPage) {\n            // Rollback\n            rollback(state); // Fit the class on a new page\n\n            page = null;\n            column = null;\n            results = null;\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = cls.clsResults[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var result = _step3.value;\n                fit(rowHeight);\n                results.push(result);\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n          }\n        } // Trim away empty columns/sections/etc\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      for (var i = pages.length - 1; i >= 0; i--) {\n        var _page = pages[i];\n\n        for (var j = _page.length - 1; j >= 0; j--) {\n          var _column = _page[j];\n\n          for (var k = _column.classes.length - 1; k >= 0; k--) {\n            var section = _column.classes[k];\n\n            if (!section.results.length) {\n              _column.classes.splice(k, 1);\n            }\n          }\n\n          if (!_column.classes.length) {\n            _page.splice(j, 1);\n          }\n        }\n\n        if (!_page.length) {\n          pages.splice(i, 1);\n        }\n      }\n\n      return pages;\n    }\n  },\n  filters: {\n    formatAbsoluteTime: function formatAbsoluteTime(t) {\n      if (t) {\n        // This code does hh:mm:ss for > 1 hour and mm:ss for < 1 hour\n\n        /*\n        var h, m, s;\n        \tif (t > 3600) {\n        \th = Math.floor(t/3600).toString();\n        \tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n        \ts = Math.floor(t%60).toString().padStart(2, '0');\n        \treturn `${h}:${m}:${s}`;\n        }\n        \telse {\n        \tif (t >= 600 ) {\n        \t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n        \t}\n        \telse {\n        \t\tm = Math.floor((t/60)%60).toString().padStart(1, '0');\n        \t}\n        \ts = Math.floor(t%60).toString().padStart(2, '0');\n        \treturn `${m}:${s}`;\n        }\n        */\n        // This code does mmm:ss for everyone\n        var m, s;\n        m = Math.floor(t / 60).toString();\n        s = Math.floor(t % 60).toString().padStart(2, '0');\n        return \"\".concat(m, \":\").concat(s);\n      }\n\n      return null;\n    },\n    formatStartTime: function formatStartTime(t) {\n      var h, m, s;\n\n      if (t > 3600) {\n        h = Math.floor(t / 3600).toString();\n        m = Math.floor(t / 60 % 60).toString().padStart(2, '0');\n        s = Math.floor(t % 60).toString().padStart(2, '0');\n        return \"\".concat(h, \":\").concat(m, \":\").concat(s);\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    window.addEventListener('resize', function () {\n      return _this2.updateWindowSize();\n    });\n    this.updateWindowSize();\n    this.refreshResults();\n    setInterval(function () {\n      return _this2.now = new Date();\n    }, 1000);\n\n    var updateLoop = function updateLoop() {\n      var nowMs = +new Date();\n      var updateIntervalMs = 5000;\n      var delay = Math.floor(nowMs / 1000) * 1000 - nowMs + updateIntervalMs;\n      setTimeout(function () {\n        _this2.refreshResults();\n\n        updateLoop();\n      }, delay);\n    };\n\n    updateLoop();\n  },\n  components: {\n    FlashCell: FlashCell\n  },\n  methods: {\n    updateWindowSize: function updateWindowSize() {\n      this.windowWidth = window.innerWidth;\n      this.windowHeight = window.innerHeight; // Update the browser window zoom level\n\n      this.zoomChrome = Math.round(window.outerWidth / window.innerWidth * 100) / 100; // console.log(this.zoomChrome);\n\n      this.columnGap = 20 * this.zoomChrome;\n      this.colOverallRank = 50 * this.zoomChrome;\n      this.colCompetitor = 180 * this.zoomChrome;\n      this.colClub = 50 * this.zoomChrome;\n      this.colElapsedTime = 65 * this.zoomChrome;\n      this.colElapsedDiff = 55 * this.zoomChrome;\n      this.colRadioTime = 65 * this.zoomChrome;\n      this.colRadioRank = 30 * this.zoomChrome;\n      this.colRadioDiff = 47 * this.zoomChrome;\n    },\n    refreshResults: function () {\n      var _refreshResults = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return meosResultsApi.getResultsScreen();\n\n              case 2:\n                this.resultsResponse = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function refreshResults() {\n        return _refreshResults.apply(this, arguments);\n      }\n\n      return refreshResults;\n    }(),\n    // Calculates the current elapsed time for a competitor, based on their startTime\n    calculateElapsedTime: function calculateElapsedTime(startTime) {\n      // Time of day in 10ths of seconds\n      var now = this.now;\n      var currentTimeSecs = (now.getSeconds() + 60 * now.getMinutes() + 60 * 60 * now.getHours()) * 10; // Calculate elapsed running time\n\n      var elapsedRunningTime = currentTimeSecs - startTime; // Check that it's positive\n\n      if (elapsedRunningTime >= 0) {\n        // Return the result\n        return elapsedRunningTime;\n      } // Otherwise, return null\n\n\n      return null;\n    },\n    // Returns whether a competitor has started yet or not\n    competitorStarted: function competitorStarted(startTime) {\n      // Number of seconds since midnight\n      var now = this.now;\n      var currentTimeSecs = (now.getSeconds() + 60 * now.getMinutes() + 60 * 60 * now.getHours()) * 10; // Calculate elapsed running time\n\n      var elapsedRunningTime = currentTimeSecs - startTime; // Check that it's positive\n\n      if (elapsedRunningTime > 0) {\n        // Return true\n        return true;\n      } // Otherwise, return false\n\n\n      return false;\n    },\n    // Determines when the status is 0 whether the competitor is started or not yet started, and returns the relevant icon\n    statusZero: function statusZero(resultObject) {\n      // Calculate their elapsed time\n      var elapsedRunningTime = this.calculateElapsedTime(resultObject.startTime); // They have not started\n\n      if (elapsedRunningTime == null) {\n        // Set the icon to three dots (pending...)\n        return 'pending';\n      } // They have started...\n      else {\n          // Set the icon to a running man\n          return 'running';\n        }\n    },\n    // Displays the distance info (if available) for a particular radio\n    formatDistance: function formatDistance(d) {\n      // Convert the distance in meters into km for display, rounded to 1dp\n      var distanceInKm = parseFloat(d / 1000).toFixed(1); // Return the distance\n\n      return distanceInKm;\n    },\n    // Returns a colour for a given string, based upon the string's hash\n    classColor: function classColor(str) {\n      var hash = 0;\n      if (str.length === 0) return hash;\n\n      for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        hash = hash & hash;\n      }\n\n      var h = Math.abs(hash) % 360;\n      var s = Math.abs(hash) % 100;\n      var l = Math.abs(hash) % 25 + 20;\n      return \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\");\n    }\n  }\n};",{"version":3,"sources":["ResultsTable.vue"],"names":[],"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","sourcesContent":["<template>\n\n\t<div v-if=\"pages[pageNum]\" \n\tclass=\"columns resultsScreen\"\n\t:style=\"{ paddingLeft: pageSidePadding + 'px', paddingRight: pageSidePadding + 'px', paddingTop: pageTopPadding + 'px', paddingBottom: pageBottomPadding + 'px' }\"\n\t>\n\n\t\t<table\n\t\t\tv-for=\"(column, columnI) of pages[pageNum]\"\n\t\t\t:key=\"columnI\"\n\t\t\tclass=\"column\"\n\t\t\t:style=\"{ marginLeft: (columnI === 0 ? 0 : columnGap) + 'px' }\"\n\t\t>\n\n\t\t\t<template\n\t\t\t\tv-for=\"(results, resultsI) of column.classes\"\n\t\t\t>\n\n\t\t\t\t<tr\n\t\t\t\t\t:key=\"`${resultsI}-header`\"\n\t\t\t\t\tclass=\"headingRow\"\n\t\t\t\t\t:style=\"{ height: headerRowHeight + 'px' }\"\n\t\t\t\t>\n\t\t\t\t\t<th class=\"className\" colspan=\"3\"><span class=\"pillIcon\" :style=\"{ backgroundColor: classColor(results.cls.clsName) }\">{{ results.cls.clsName }} <span class=\"contText\">{{ results.continued ? '(Cont...)' : '' }}</span><div class=\"classMetadata\"><span class=\"classLength\">{{ results.cls.length != null ? formatDistance(results.cls.length) + ' km' : '' }}</span> &#8226; <span class=\"classCourse\">{{ results.cls.course }}</span></div></span></th>\n\t\t\t\t\t<th class=\"elapsedHeading\" colspan=\"2\">Total</th>\n\t\t\t\t\t<th class=\"splitHeading\" colspan=\"3\" v-for=\"(n, i) in results.cls.radioCount\" :key=\"n\">Split {{ n }} - {{ results.cls.radioInfo[i].distance != null ? formatDistance(results.cls.radioInfo[i].distance) + ' km' : '' }}</th>\n\t\t\t\t\t<th\n\t\t\t\t\t\tv-if=\"results.cls.radioCount < column.maxRadioCount\"\n\t\t\t\t\t\t:colspan=\"(column.maxRadioCount - results.cls.radioCount) * 3\"\n\t\t\t\t\t/>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr\n\t\t\t\t\tv-for=\"result of results.results\"\n\t\t\t\t\t:key=\"`${resultsI}-result-${result.id}`\"\n\t\t\t\t\t:style=\"{ height: rowHeight + 'px' }\"\n\t\t\t\t\tv-bind:class=\"{ 'proceedToDownload':(result.status == 100) }\"\n\t\t\t\t>\n\n\t\t\t\t\t<td class=\"col-overallRank\" :style=\"{ width: colOverallRank + 'px' }\">\n\t\t\t\t\t\t<font-awesome-icon v-if=\"result.startTime > 0 && result.status == 0 && statusZero(result) == 'running'\" icon=\"running\" class=\"pillIcon running\" />\n\t\t\t\t\t\t<font-awesome-icon v-else-if=\"(result.status == 0 && statusZero(result) == 'pending') || (result.startTime <= 0 && result.status == 0)\" icon=\"ellipsis-h\" />\n\t\t\t\t\t\t<template v-else-if=\"result.status == 1\"><span class=\"pillIcon finisher\">{{ result.finishRank }}</span></template>\n\t\t\t\t\t\t<template v-else-if=\"result.status == 100\"><span class=\"pillIcon finisher\">{{ result.finishRank }}</span></template>\n\t\t\t\t\t\t<template v-else><span class=\"pillIcon nonfinisher\">{{ statusToRank[result.status] }}</span></template>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<td class=\"col-competitor\" :style=\"{ width: colCompetitor + 'px' }\">{{ result.competitor }}</td>\n\t\t\t\t\t<td class=\"col-club\" :style=\"{ width: colClub + 'px' }\">{{ result.club }}</td>\n\n\t\t\t\t\t<td class=\"col-elapsedTime\" :style=\"{ width: colElapsedTime + 'px' }\">\n\t\t\t\t\t\t<template v-if=\"result.startTime > 0 && competitorStarted(result.startTime) == false\"><span class=\"startTimeDisplay\">{{ (result.startTime / 10) | formatStartTime }}</span></template>\n\t\t\t\t\t\t<template v-else-if=\"result.startTime > 0 && result.finishTime == null && result.status == 0\">{{ (calculateElapsedTime(result.startTime) / 10) | formatAbsoluteTime }}</template>\n\t\t\t\t\t\t<template v-else>{{ result.finishTime }}</template>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<td class=\"col-elapsedDiff\" :style=\"{ width: colElapsedDiff + 'px' }\">\n\t\t\t\t\t\t<template v-if=\"competitorStarted(result.startTime) == false\"><span class=\"startTimeDisplay\">Start</span></template>\n\t\t\t\t\t\t<template v-else>{{ result.finishDiff }}</template>\n\t\t\t\t\t</td>\n\n\t\t\t\t\t<!-- we need to use i (index) rather than n (value) so we start at zero-->\n\t\t\t\t\t<template v-for=\"(n, i) in results.cls.radioCount\">\n\n\t\t\t\t\t\t<flash-cell :display-value=\"result.radios[i].time\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-time'\" class=\"col-radioTime\" :style=\"{ width: colRadioTime + 'px' }\"></flash-cell>\n\n\t\t\t\t\t\t<!-- if no radio punch then print no brackets-->\n\t\t\t\t\t\t<flash-cell v-if=\"result.radios[i].time == null\" :display-value=\"null\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-rank'\" class=\"col-radioRank\" :style=\"{ width: colRadioRank + 'px' }\"></flash-cell>\n\t\t\t\t\t\t<flash-cell v-else :display-value=\"'(' + result.radios[i].rank + ')'\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-rank'\" class=\"col-radioRank\" :style=\"{ width: colRadioRank + 'px' }\"></flash-cell>\n\n\t\t\t\t\t\t<flash-cell :display-value=\"result.radios[i].diff\" :watch-value=\"result.radios[i].time\" :key=\"result.id + '-' + result.radios[i].code + '-diff'\" class=\"col-radioDiff\" :style=\"{ width: colRadioDiff + 'px' }\"></flash-cell>\n\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<td\n\t\t\t\t\t\tv-if=\"results.cls.radioCount < column.maxRadioCount\"\n\t\t\t\t\t\t:colspan=\"(column.maxRadioCount - results.cls.radioCount) * 3\"\n\t\t\t\t\t/>\n\n\t\t\t\t</tr>\n\n\t\t\t</template>\n\n\t\t</table>\n\n\t\t<div id=\"marquee\" v-bind:class=\"{ 'marqueeHidden': resultsResponse.marquee.show == 0, 'marqueeShow': resultsResponse.marquee.show != 0 }\">\n\t\t\t<marquee-text :repeat=\"10\" :duration=\"parseInt(resultsResponse.marquee.duration)\">{{ resultsResponse.marquee.text }}</marquee-text>\n\t\t</div>\n\n\t</div>\n\n</template>\n\n<style scoped>\n\n/* roboto-100 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 100;\n  src: local('Roboto Thin'), local('Roboto-Thin'),\n       url('/fonts/roboto-v20-latin-100.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-100.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-100italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 100;\n  src: local('Roboto Thin Italic'), local('Roboto-ThinItalic'),\n       url('/fonts/roboto-v20-latin-100italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-100italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-300 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Roboto Light'), local('Roboto-Light'),\n       url('/fonts/roboto-v20-latin-300.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-300.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-300italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 300;\n  src: local('Roboto Light Italic'), local('Roboto-LightItalic'),\n       url('/fonts/roboto-v20-latin-300italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-300italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-regular - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Roboto'), local('Roboto-Regular'),\n       url('/fonts/roboto-v20-latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 400;\n  src: local('Roboto Italic'), local('Roboto-Italic'),\n       url('/fonts/roboto-v20-latin-italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-500 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 500;\n  src: local('Roboto Medium'), local('Roboto-Medium'),\n       url('/fonts/roboto-v20-latin-500.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-500.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-500italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 500;\n  src: local('Roboto Medium Italic'), local('Roboto-MediumItalic'),\n       url('/fonts/roboto-v20-latin-500italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-500italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-700 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Roboto Bold'), local('Roboto-Bold'),\n       url('/fonts/roboto-v20-latin-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-700italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 700;\n  src: local('Roboto Bold Italic'), local('Roboto-BoldItalic'),\n       url('/fonts/roboto-v20-latin-700italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-700italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-900 - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-weight: 900;\n  src: local('Roboto Black'), local('Roboto-Black'),\n       url('/fonts/roboto-v20-latin-900.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-900.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n/* roboto-900italic - latin */\n@font-face {\n  font-family: 'Roboto';\n  font-style: italic;\n  font-weight: 900;\n  src: local('Roboto Black Italic'), local('Roboto-BlackItalic'),\n       url('/fonts/roboto-v20-latin-900italic.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */\n       url('/fonts/roboto-v20-latin-900italic.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n}\n\ndiv.resultsScreen {\n\tbackground-color: #333;\n\tcolor: #eee;\n\tfont-family: Roboto;\n\tmargin: 0;\n}\n\ntable {\n\tborder-collapse: collapse;\n\twhite-space: nowrap;\n\ttable-layout: fixed;\n\toverflow: hidden;\n}\n\ntable tr td {\n\t/*border: 1px solid #777;*/\n\tvertical-align: bottom;\n}\n\ntd, th {\n\tpadding: 0 3px;\n\tbox-sizing: border-box;\n\tposition: relative;\n}\n\nth {\n\tborder-bottom: 1px solid #777;\n\tvertical-align: bottom;\n\tpadding-bottom: 10px;\n}\n\n@keyframes proceedToDownload {\n\t0% { \n\t\topacity: 0.1;\n\t}\n\n\t15% {\n\t\topacity: 1;\n\t}\n\n\t25% {\n\t\topacity: 1;\n\t}\n\n\t40% {\n\t\topacity: 0.1;\n\t}\n\n\t100% {\n\t\topacity: 0.1;\n\t}\n\n}\n\ntr.proceedToDownload td:first-child:after {\n\tposition: absolute;\n\tz-index: 1;\n\tdisplay: block;\n\ttext-align: left;\n\tleft: 0;\n\ttop: 0;\n\twidth: 1000px;\n\theight: 24px;\n\tpadding-top: 5px;\n\tmargin-left: -50px;\n\tcontent:\"UNOFFICIAL • PROCEED TO DOWNLOAD • UNOFFICIAL • PROCEED TO DOWNLOAD • UNOFFICIAL • PROCEED TO DOWNLOAD\";\n\tfont-size: 17px;\n\tbackground: repeating-linear-gradient(\n\t\t45deg,\n\t\t#EF9F01,\n\t\t#EF9F01 10px,\n\t\t#FEBB34 10px,\n\t\t#FEBB34 20px\n\t);\n\tcolor: white;\n\topacity: 0.1;\n\tanimation-duration: 30000ms;\n\tanimation-name: proceedToDownload;\n\tanimation-iteration-count: infinite;\n}\n\n\ntr:nth-child(even){\n\tbackground-color: #444;\n}\n\ntr:nth-child(odd){\n\tbackground-color: #333;\n}\n\nth.className {\n\ttext-align: left;\n\tfont-size: 24px;\n\ttext-transform: uppercase;\n\tpadding-top: 10px;\n\tpadding-left: 10px;\n\tfont-weight: 500;\n}\n\ntr.headingRow th.className span.pillIcon {\n\tborder-radius: 5px;\n\tdisplay: inline-block;\n\tpadding: 4px 16px 3px 16px;\n\twidth: 225px;\n}\n\nth.className .classMetadata {\n\tmargin-top: 5px;\n\tfont-size: 14px;\n\tfont-weight: 300;\n}\n\nth.className .classLength {\n\tmargin-right: 5px;\n}\n\nth.className .classCourse {\n\tmargin-left: 5px;\n}\n\nth.className .contText {\n\tfont-size: 16px;\n}\n\nth.elapsedHeading {\n\tfont-size: 14px;\n\ttext-align: center;\n}\n\nth.splitHeading {\n\tfont-size: 14px;\n\ttext-align: center;\n}\n\ntd {\n\tborder-bottom: 1px solid #777;\n}\n\ntd.col-overallRank {\n\ttext-align: center;\n\tfont-size: 13px;\n\tvertical-align: middle;\n}\n\ntd.col-overallRank .pillIcon {\n\tborder: none;\n\tpadding: 2px 5px;\n\tcolor: white;\n\ttext-align: center;\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\tmargin: 4px 2px;\n\tborder-radius: 18px;\n}\n\ntd.col-overallRank .pillIcon.finisher {\n\tbackground-color: #32a852;\n}\n\ntd.col-overallRank .pillIcon.running {\n\tpadding: 2px 7px;\n\tbackground-color: #d18400;\n}\n\ntr.proceedToDownload td.col-overallRank .pillIcon {\n\tbackground-color: #d18400;\n}\n\ntd.col-overallRank .pillIcon.nonfinisher {\n\tbackground-color: #8c1414;\n}\n\ntd.col-competitor {\n\tmax-width: 180px;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tvertical-align: middle;\n\tfont-weight: 500;\n}\n\ntd.col-club {\n\tvertical-align: middle;\n}\n\ntd.col-elapsedTime {\n\ttext-align: right;\n\tvertical-align: middle;\n}\n\ntd.col-elapsedTime .startTimeDisplay {\n\tcolor: #d18400;\n\tfont-weight: 300;\n}\n\ntd.col-elapsedDiff {\n\ttext-align: left;\n\tfont-size: 12px;\n\tvertical-align: middle;\n\tpadding-top: 2px;\n}\n\ntd.col-elapsedDiff .startTimeDisplay {\n\tcolor: #d18400;\n\tfont-weight: 300;\n}\n\ntd.col-radioTime {\n\ttext-align: right;\n\tvertical-align: middle;\n}\n\ntd.col-radioRank {\n\tfont-size: 12px;\n\tvertical-align: middle;\n\tpadding-top: 2px;\n}\n\ntd.col-radioDiff {\n\ttext-align: left;\n\tfont-size: 12px;\n\tvertical-align: middle;\n\tpadding-top: 2px;\n}\n\n.columns {\n\tdisplay: flex;\n}\n\n.column {\n\tflex: 0 0 auto;\n}\n\n#marquee {\n\tbackground-color: black;\n\theight: 46px;\n\twidth: 100%;\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\tpadding-top: 8px;\n\ttext-transform: uppercase;\n\tfont-size: 32px;\n}\n\n#marquee .marquee-text-text {\n\tpadding-right: 150px;\n\twhite-space: pre-wrap;\n}\n\n@keyframes hideMarquee {\n\t0% { \n\t\tbottom: 0;\n\t}\n\n\t100% {\n\t\tbottom: -54px;\n\t}\n\n}\n\n#marquee.marqueeHidden {\n\t/*display: none;*/\n\tanimation-duration: 1000ms;\n\tanimation-name: hideMarquee;\n\tanimation-iteration-count: 1;\n\tbottom: -54px;\n}\n\n@keyframes showMarquee {\n\t0% { \n\t\tbottom: -54px;\n\t}\n\n\t100% {\n\t\tbottom: 0px;\n\t}\n\n}\n\n#marquee.marqueeShow {\n\t/*display: none;*/\n\tanimation-duration: 1000ms;\n\tanimation-name: showMarquee;\n\tanimation-iteration-count: 1;\n\tbottom: 0px;\n}\n\n</style>\n\n<script>\n\n\timport meosResultsApi from '@/meos-results-api'\n\timport FlashCell from '@/components/ResultsScreen/FlashCell.vue'\n\n\texport default {\n\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tnow: new Date(),\n\t\t\t\tpageNum: parseInt(this.$route.params.page) || 0,\n\t\t\t\tresultsResponse: null,\n\n\t\t\t\twindowWidth: 0,\n\t\t\t\twindowHeight: 0,\n\t\t\t\trowHeight: 30,\n\t\t\t\theaderRowHeight: 80,\n\t\t\t\tcolumnGap: 20,\n\t\t\t\tpageSidePadding: 10,\n\t\t\t\tpageTopPadding: 0,\n\t\t\t\tpageBottomPadding: 60,\n\n\t\t\t\t// Store the zoom level of the browser window\n\t\t\t\tzoomChrome: 1,\n\n\t\t\t\t// Column widths\n\t\t\t\tcolOverallRank: 50,\n\t\t\t\tcolCompetitor: 180,\n\t\t\t\tcolClub: 50,\n\t\t\t\tcolElapsedTime: 65,\n\t\t\t\tcolElapsedDiff: 55,\n\t\t\t\tcolRadioTime: 65,\n\t\t\t\tcolRadioRank: 30,\n\t\t\t\tcolRadioDiff: 47,\n\n\t\t\t\tstatusToRank: {\n\t\t\t\t\t3: 'MP',\n\t\t\t\t\t4: 'DNF',\n\t\t\t\t\t5: 'DQ',\n\t\t\t\t\t6: 'OT',\n\t\t\t\t\t20: 'DNS',\n\t\t\t\t\t21: 'CNL',\n\t\t\t\t\t99: 'NP',\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcomputed: {\n\t\t\t// Splits the data into \"pages\" such that all of the data within each page\n\t\t\t// will fit as efficiently as possible onto the page\n\t\t\tpages() {\n\t\t\t\tconst {\n\t\t\t\t\tresultsResponse,\n\t\t\t\t\twindowHeight,\n\t\t\t\t\trowHeight,\n\t\t\t\t\theaderRowHeight,\n\t\t\t\t\tcolumnGap,\n\t\t\t\t\tcolOverallRank,\n\t\t\t\t\tcolCompetitor,\n\t\t\t\t\tcolClub,\n\t\t\t\t\tcolElapsedTime,\n\t\t\t\t\tcolElapsedDiff,\n\t\t\t\t\tcolRadioTime,\n\t\t\t\t\tcolRadioRank,\n\t\t\t\t\tcolRadioDiff,\n\t\t\t\t} = this\n\t\t\t\t\n\t\t\t\tconst windowWidth = this.windowWidth - this.pageSidePadding * 2\n\n\t\t\t\tif (!resultsResponse) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\tconst pages = []\n\t\t\t\tlet page = null\n\t\t\t\tlet column = null\n\t\t\t\tlet results = null\n\t\t\t\tlet lastCls = null\n\t\t\t\tlet cls = null\n\t\t\t\tlet tableWidth = 0\n\t\t\t\tlet columnWidth = 0\n\t\t\t\tlet columnHeight = 0\n\t\t\t\tlet overallWidth = 0\n\n\t\t\t\tconst tableBaseWidth = colOverallRank + colCompetitor + colClub + colElapsedTime + colElapsedDiff\n\t\t\t\tconst tableRadioWidth = colRadioTime + colRadioRank + colRadioDiff\n\n\t\t\t\tconst save = () => {\n\t\t\t\t\t// This is all the data we need in order to restore the state\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpagesLength: pages.length,\n\t\t\t\t\t\tpageLength: page && page.length,\n\t\t\t\t\t\tcolumnLength: column && column.classes.length,\n\t\t\t\t\t\tlastCls,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tcolumnWidth,\n\t\t\t\t\t\tcolumnHeight,\n\t\t\t\t\t\toverallWidth,\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst rollback = state => {\n\t\t\t\t\t({\n\t\t\t\t\t\tlastCls,\n\t\t\t\t\t\ttableWidth,\n\t\t\t\t\t\tcolumnWidth,\n\t\t\t\t\t\tcolumnHeight,\n\t\t\t\t\t\toverallWidth,\n\t\t\t\t\t} = state)\n\n\t\t\t\t\tpages.splice(state.pagesLength)\n\t\t\t\t\tpage = pages[pages.length - 1]\n\n\t\t\t\t\tif (page) {\n\t\t\t\t\t\tpage.splice(state.pageLength)\n\t\t\t\t\t\tcolumn = page[page.length - 1]\n\n\t\t\t\t\t\tif (column) {\n\t\t\t\t\t\t\tcolumn.classes.splice(state.columnLength)\n\t\t\t\t\t\t\tresults = column.classes[column.classes.length - 1]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst fit = height => {\n\t\t\t\t\tconst additionalWidth = Math.max(0, tableWidth - columnWidth)\n\t\t\t\t\tconst overflowH = overallWidth + additionalWidth > windowWidth\n\t\t\t\t\tconst overflowV = columnHeight + height + this.pageTopPadding + this.pageBottomPadding > windowHeight\n\n\t\t\t\t\t// Do we need another page?\n\t\t\t\t\tif (!page || (overflowH && page.length > 1)) {\n\t\t\t\t\t\tpage = []\n\t\t\t\t\t\tpages.push(page)\n\t\t\t\t\t\tcolumn = null\n\t\t\t\t\t\tresults = null\n\t\t\t\t\t\tcolumnWidth = 0\n\t\t\t\t\t\tcolumnHeight = 0\n\t\t\t\t\t\toverallWidth = 0\n\t\t\t\t\t\tfit(height)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do we need another column?\n\t\t\t\t\tif (!column || overflowV) {\n\t\t\t\t\t\tcolumn = {\n\t\t\t\t\t\t\tmaxRadioCount: 0,\n\t\t\t\t\t\t\tclasses: [],\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpage.push(column)\n\t\t\t\t\t\tresults = null\n\t\t\t\t\t\tcolumnWidth = tableWidth\n\t\t\t\t\t\tcolumnHeight = 0\n\t\t\t\t\t\toverallWidth += tableWidth + (page.length === 1 ? 0 : columnGap)\n\t\t\t\t\t\tfit(height)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do we need another results section?\n\t\t\t\t\tif (!results) {\n\t\t\t\t\t\tresults = []\n\t\t\t\t\t\tcolumn.maxRadioCount = Math.max(column.maxRadioCount, cls.radioCount)\n\t\t\t\t\t\tcolumn.classes.push({\n\t\t\t\t\t\t\tcls,\n\t\t\t\t\t\t\tresults,\n\t\t\t\t\t\t\tcontinued: lastCls === cls,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tlastCls = cls\n\t\t\t\t\t\tcolumnHeight += headerRowHeight\n\t\t\t\t\t\tfit(height)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnWidth += additionalWidth\n\t\t\t\t\tcolumnHeight += height\n\t\t\t\t}\n\n\t\t\t\tfor (cls of resultsResponse.cmpResults) {\n\t\t\t\t\ttableWidth = tableBaseWidth + tableRadioWidth * cls.radioCount\n\t\t\t\t\tresults = null\n\t\t\t\t\t\n\t\t\t\t\t// Save the current state in case we need to rollback\n\t\t\t\t\tconst state = save()\n\n\t\t\t\t\t// Are we at the start of a page?\n\t\t\t\t\tconst atStartOfPage = !page || !page.length || !page[0].classes.length\n\t\t\t\t\tconst pagesLengthBefore = pages.length\n\n\t\t\t\t\t// Fit the class\n\t\t\t\t\tfor (const result of cls.clsResults) {\n\t\t\t\t\t\tfit(rowHeight)\n\t\t\t\t\t\tresults.push(result)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Was the class split across multiple pages?\n\t\t\t\t\tconst classSpansMultiplePages = pages.length > pagesLengthBefore\n\n\t\t\t\t\tif (classSpansMultiplePages && !atStartOfPage) {\n\t\t\t\t\t\t// Rollback\n\t\t\t\t\t\trollback(state)\n\n\t\t\t\t\t\t// Fit the class on a new page\n\t\t\t\t\t\tpage = null\n\t\t\t\t\t\tcolumn = null\n\t\t\t\t\t\tresults = null\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (const result of cls.clsResults) {\n\t\t\t\t\t\t\tfit(rowHeight)\n\t\t\t\t\t\t\tresults.push(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Trim away empty columns/sections/etc\n\t\t\t\tfor (let i = pages.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst page = pages[i]\n\n\t\t\t\t\tfor (let j = page.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tconst column = page[j]\n\n\t\t\t\t\t\tfor (let k = column.classes.length - 1; k >= 0; k--) {\n\t\t\t\t\t\t\tconst section = column.classes[k]\n\n\t\t\t\t\t\t\tif (!section.results.length) {\n\t\t\t\t\t\t\t\tcolumn.classes.splice(k, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!column.classes.length) {\n\t\t\t\t\t\t\tpage.splice(j, 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!page.length) {\n\t\t\t\t\t\tpages.splice(i, 1)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn pages\n\t\t\t},\n\t\t},\n\n\t\tfilters: {\n\t\t\tformatAbsoluteTime: function(t) {\n\t\t\t\t\n\t\t\t\tif (t) {\n\n\t\t\t\t\t// This code does hh:mm:ss for > 1 hour and mm:ss for < 1 hour\n\n\t\t\t\t\t/*\n\t\t\t\t\tvar h, m, s;\n\n\t\t\t\t\tif (t > 3600) {\n\t\t\t\t\t\th = Math.floor(t/3600).toString();\n\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\t\treturn `${h}:${m}:${s}`;\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (t >= 600 ) {\n\t\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(1, '0');\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\t\treturn `${m}:${s}`;\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\n\t\t\t\t\t// This code does mmm:ss for everyone\n\t\t\t\t\tvar m, s;\n\n\t\t\t\t\tm = Math.floor(t/60).toString();\n\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\treturn `${m}:${s}`;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\tformatStartTime: function(t) {\n\n\t\t\t\tvar h, m, s;\n\n\t\t\t\tif (t > 3600) {\n\t\t\t\t\th = Math.floor(t/3600).toString();\n\t\t\t\t\tm = Math.floor((t/60)%60).toString().padStart(2, '0');\n\t\t\t\t\ts = Math.floor(t%60).toString().padStart(2, '0');\n\t\t\t\t\treturn `${h}:${m}:${s}`;\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t},\n\n\t\tcreated () {\n\t\t\twindow.addEventListener('resize', () => this.updateWindowSize())\n\t\t\tthis.updateWindowSize()\n\t\t\tthis.refreshResults()\n\n\t\t\tsetInterval(() => this.now = new Date(), 1000)\n\n\t\t\tconst updateLoop = () => {\n\t\t\t\tconst nowMs = +new Date()\n\t\t\t\tconst updateIntervalMs = 5000;\n\t\t\t\tconst delay = Math.floor(nowMs / 1000) * 1000 - nowMs + updateIntervalMs\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.refreshResults()\n\t\t\t\t\tupdateLoop()\n\n\t\t\t\t}, delay)\n\t\t\t}\n\n\t\t\tupdateLoop()\n\t\t},\n\n\t\tcomponents: {\n\t\t\tFlashCell\n\t\t},\n\n\t\tmethods: {\n\n\t\t\tupdateWindowSize() {\n\t\t\t\tthis.windowWidth = window.innerWidth\n\t\t\t\tthis.windowHeight = window.innerHeight\n\n\t\t\t\t// Update the browser window zoom level\n\t\t\t\tthis.zoomChrome = Math.round(((window.outerWidth) / window.innerWidth) * 100) / 100;\n\t\t\t\t// console.log(this.zoomChrome);\n\n\t\t\t\tthis.columnGap = 20 * this.zoomChrome\n\t\t\t\tthis.colOverallRank = 50 * this.zoomChrome\n\t\t\t\tthis.colCompetitor = 180 * this.zoomChrome\n\t\t\t\tthis.colClub = 50 * this.zoomChrome\n\t\t\t\tthis.colElapsedTime = 65 * this.zoomChrome\n\t\t\t\tthis.colElapsedDiff = 55 * this.zoomChrome\n\t\t\t\tthis.colRadioTime = 65 * this.zoomChrome\n\t\t\t\tthis.colRadioRank = 30 * this.zoomChrome\n\t\t\t\tthis.colRadioDiff = 47 * this.zoomChrome\n\n\t\t\t},\n\n\t\t\tasync refreshResults () {\n\t\t\t\tthis.resultsResponse = await meosResultsApi.getResultsScreen()\n\t\t\t},\n\n\t\t\t// Calculates the current elapsed time for a competitor, based on their startTime\n\t\t\tcalculateElapsedTime(startTime) {\n\n\t\t\t\t// Time of day in 10ths of seconds\n\t\t\t\tconst { now } = this;\n\t\t\t\tconst currentTimeSecs = (now.getSeconds() + (60 * now.getMinutes()) + (60 * 60 * now.getHours())) * 10;\n\n\t\t\t\t// Calculate elapsed running time\n\t\t\t\tconst elapsedRunningTime = currentTimeSecs - startTime;\n\n\t\t\t\t// Check that it's positive\n\t\t\t\tif (elapsedRunningTime >= 0) {\n\n\t\t\t\t\t// Return the result\n\t\t\t\t\treturn elapsedRunningTime;\n\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, return null\n\t\t\t\treturn null;\n\n\t\t\t},\n\n\t\t\t// Returns whether a competitor has started yet or not\n\t\t\tcompetitorStarted(startTime) {\n\n\t\t\t\t// Number of seconds since midnight\n\t\t\t\tconst { now } = this;\n\t\t\t\tconst currentTimeSecs = (now.getSeconds() + (60 * now.getMinutes()) + (60 * 60 * now.getHours())) * 10;\n\n\t\t\t\t// Calculate elapsed running time\n\t\t\t\tconst elapsedRunningTime = currentTimeSecs - startTime;\n\n\t\t\t\t// Check that it's positive\n\t\t\t\tif (elapsedRunningTime > 0) {\n\n\t\t\t\t\t// Return true\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, return false\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\t// Determines when the status is 0 whether the competitor is started or not yet started, and returns the relevant icon\n\t\t\tstatusZero(resultObject) {\n\n\t\t\t\t// Calculate their elapsed time\n\t\t\t\tvar elapsedRunningTime = this.calculateElapsedTime(resultObject.startTime);\n\n\t\t\t\t// They have not started\n\t\t\t\tif (elapsedRunningTime == null) {\n\n\t\t\t\t\t// Set the icon to three dots (pending...)\n\t\t\t\t\treturn 'pending';\n\n\t\t\t\t}\n\n\t\t\t\t// They have started...\n\t\t\t\telse {\n\n\t\t\t\t\t// Set the icon to a running man\n\t\t\t\t\treturn 'running';\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\t// Displays the distance info (if available) for a particular radio\n\t\t\tformatDistance(d) {\n\n\t\t\t\t// Convert the distance in meters into km for display, rounded to 1dp\n\t\t\t\tvar distanceInKm = parseFloat(d / 1000).toFixed(1);\n\n\t\t\t\t// Return the distance\n\t\t\t\treturn distanceInKm;\n\n\t\t\t},\n\n\t\t\t// Returns a colour for a given string, based upon the string's hash\n\t\t\tclassColor(str) {\n\n\t\t\t\tvar hash = 0;\n\n\t\t\t\tif (str.length === 0) return hash;\n\n\t\t\t\tfor (var i = 0; i < str.length; i++) {\n\t\t\t\t\thash = str.charCodeAt(i) + ((hash << 5) - hash);\n\t\t\t\t\thash = hash & hash;\n\t\t\t\t}\n\n\t\t\t\tconst h = Math.abs(hash) % 360;\n\t\t\t\tconst s = Math.abs(hash) % 100;\n\t\t\t\tconst l = (Math.abs(hash) % 25) + 20;\n\n\t\t\t\treturn `hsl(${h}, ${s}%, ${l}%)`;\n\n\t\t\t},\n\n\t\t}\n\n\t}\n\n</script>\n"],"sourceRoot":"src/components/ResultsScreen"}]}